<%- include("layout", { body: 
`<div class="page-header">
  <div>
    <h1 class="page-title">${credential.id ? 'Editar' : 'Nova'} Senha</h1>
    <p class="page-subtitle">
      ${credential.id ? 'Atualize as informações de acesso' : 'Cadastre uma nova credencial'}
    </p>
  </div>
</div>

<div class="card">
  <div class="card-body">
    <form 
      action="${credential.id ? `/credentials/${credential.id}?_method=PUT` : '/credentials'}" 
      method="POST"
    >
      <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px;">
        <div class="form-group">
          <label for="system_name" class="form-label">Nome do Sistema *</label>
          <input 
            type="text" 
            id="system_name" 
            name="system_name" 
            class="form-control" 
            value="${credential.system_name || ''}" 
            required
          >
        </div>

        <div class="form-group">
          <label for="category_id" class="form-label">Categoria *</label>
          <select id="category_id" name="category_id" class="form-select" required>
            <option value="">Selecione uma categoria</option>` +
            categories.map(category => 
              `<option 
                value="${category.id}" 
                ${credential.category_id == category.id ? 'selected' : ''}
              >
                ${category.name}
              </option>`
            ).join('') +
          `</select>
        </div>

        <div class="form-group">
          <label for="location_id" class="form-label">Localidade</label>
          <select id="location_id" name="location_id" class="form-select">
            <option value="">Selecione uma localidade</option>` +
            locations.map(location => 
              `<option 
                value="${location.id}" 
                ${credential.location_id == location.id ? 'selected' : ''}
              >
                ${location.name}
              </option>`
            ).join('') +
          `</select>
        </div>

        <div class="form-group">
          <label for="username" class="form-label">Usuário *</label>
          <input 
            type="text" 
            id="username" 
            name="username" 
            class="form-control" 
            value="${credential.username || ''}" 
            required
          >
        </div>

        <div class="form-group">
          <label for="password" class="form-label">Senha *</label>
          <div class="password-field" style="display: flex; position: relative;">
            <input 
              type="password" 
              id="password" 
              name="password" 
              class="form-control" 
              value="${credential.password || ''}" 
              required
              style="flex: 1; padding-right: 40px;"
            >
            <span class="password-toggle" style="position: absolute; right: 60px; top: 50%; transform: translateY(-50%); cursor: pointer; z-index: 10;">
              <i class="fas fa-eye"></i>
            </span>
            <button type="button" id="generate-password" class="btn btn-info" style="margin-left: 10px;">
              <i class="fas fa-dice"></i> Gerar
            </button>
          </div>
        </div>

        <div class="form-group">
          <label for="url" class="form-label">URL</label>
          <input 
            type="url" 
            id="url" 
            name="url" 
            class="form-control" 
            value="${credential.url || ''}"
          >
        </div>
      </div>

      <div class="form-group">
        <label for="notes" class="form-label">Observações</label>
        <textarea 
          id="notes" 
          name="notes" 
          class="form-control" 
          rows="4"
        >${credential.notes || ''}</textarea>
      </div>

      <div style="display: flex; gap: 10px; margin-top: 20px;">
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-save"></i> Salvar
        </button>
        <a href="/credentials" class="btn btn-danger">
          <i class="fas fa-times"></i> Cancelar
        </a>
      </div>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Password toggle functionality
    const passwordToggle = document.querySelector('.password-toggle');
    const passwordField = document.getElementById('password');
    
    if (passwordToggle && passwordField) {
      passwordToggle.addEventListener('click', function() {
        const icon = this.querySelector('i');
        
        if (passwordField.type === 'password') {
          passwordField.type = 'text';
          icon.classList.remove('fa-eye');
          icon.classList.add('fa-eye-slash');
        } else {
          passwordField.type = 'password';
          icon.classList.remove('fa-eye-slash');
          icon.classList.add('fa-eye');
        }
      });
    }

    // Password generator functionality
    const generatePasswordBtn = document.getElementById('generate-password');
    
    if (generatePasswordBtn) {
      generatePasswordBtn.addEventListener('click', function() {
        const password = generateSecurePassword();
        passwordField.value = password;
        
        // Show password temporarily
        passwordField.type = 'text';
        const icon = passwordToggle.querySelector('i');
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
        
        // Hide password after 3 seconds
        setTimeout(() => {
          passwordField.type = 'password';
          icon.classList.remove('fa-eye-slash');
          icon.classList.add('fa-eye');
        }, 3000);
      });
    }

    // Password generator function
    function generateSecurePassword(length = 16) {
      const lowercase = 'abcdefghijklmnopqrstuvwxyz';
      const uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
      const numbers = '0123456789';
      const symbols = '!@#$%^&*()_+-=[]{}|;:,.<>?';
      
      const allChars = lowercase + uppercase + numbers + symbols;
      let password = '';
      
      // Ensure at least one character from each category
      password += lowercase[Math.floor(Math.random() * lowercase.length)];
      password += uppercase[Math.floor(Math.random() * uppercase.length)];
      password += numbers[Math.floor(Math.random() * numbers.length)];
      password += symbols[Math.floor(Math.random() * symbols.length)];
      
      // Fill the rest randomly
      for (let i = 4; i < length; i++) {
        password += allChars[Math.floor(Math.random() * allChars.length)];
      }
      
      // Shuffle the password
      return password.split('').sort(() => Math.random() - 0.5).join('');
    }

    // Form validation enhancement
    const form = document.querySelector('form');
    if (form) {
      form.addEventListener('submit', function(e) {
        const systemName = document.getElementById('system_name').value.trim();
        const categoryId = document.getElementById('category_id').value;
        const username = document.getElementById('username').value.trim();
        const password = document.getElementById('password').value;
        
        if (!systemName || !categoryId || !username || !password) {
          e.preventDefault();
          alert('Por favor, preencha todos os campos obrigatórios.');
          return false;
        }
        
        if (password.length < 6) {
          e.preventDefault();
          alert('A senha deve ter pelo menos 6 caracteres.');
          return false;
        }
      });
    }

    // URL validation
    const urlField = document.getElementById('url');
    if (urlField) {
      urlField.addEventListener('blur', function() {
        const url = this.value.trim();
        if (url && !url.startsWith('http://') && !url.startsWith('https://')) {
          this.value = 'https://' + url;
        }
      });
    }

    // Auto-focus first field
    const firstField = document.getElementById('system_name');
    if (firstField && !firstField.value) {
      firstField.focus();
    }
  });
</script>`
}) %>