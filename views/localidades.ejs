<% layout('layout') -%>

<div class="flex justify-between items-center mb-6">
    <div>
        <h2 class="text-3xl font-bold text-gray-800 mb-2">Localidades</h2>
        <p class="text-gray-600">Gerencie as localidades do sistema</p>
    </div>
    <% if (user.tipo_usuario === 'administrador') { %>
    <button onclick="openLocalidadeModal()" class="bg-yellow-500 hover:bg-yellow-600 text-white px-6 py-3 rounded-lg transition duration-200 flex items-center space-x-2">
        <i class="fas fa-plus"></i>
        <span>Nova Localidade</span>
    </button>
    <% } %>
</div>

<!-- Filtros -->
<div class="bg-white rounded-lg shadow-md mb-6">
    <div class="p-6 border-b border-gray-200">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div class="relative">
                <input 
                    type="text" 
                    id="searchInput"
                    placeholder="Buscar por nome, código ou CNPJ..." 
                    class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent"
                >
                <i class="fas fa-search absolute left-3 top-3 text-gray-400 pointer-events-none"></i>
            </div>
            <div>
                <select id="statusFilter" class="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-yellow-500">
                    <option value="">Todos os status</option>
                    <option value="true">Ativo</option>
                    <option value="false">Inativo</option>
                </select>
            </div>
            <div>
                <button onclick="clearFilters()" class="w-full bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg transition duration-200">
                    <i class="fas fa-times mr-2"></i>
                    Limpar Filtros
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Tabela de Localidades -->
<div class="bg-white rounded-lg shadow-md">
    <div class="overflow-x-auto">
        <table class="w-full">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Código</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nome</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">CNPJ</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Telefone</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200" id="localidadeTableBody">
                <!-- Dados serão inseridos aqui via JavaScript -->
            </tbody>
        </table>
    </div>
    
    <!-- Loading -->
    <div id="tableLoading" class="text-center py-8 hidden">
        <i class="fas fa-spinner fa-spin text-2xl text-gray-400"></i>
        <p class="text-gray-500 mt-2">Carregando localidades...</p>
    </div>
    
    <!-- Empty State -->
    <div id="emptyState" class="text-center py-8 hidden">
        <i class="fas fa-map-marker-alt text-4xl text-gray-300 mb-4"></i>
        <p class="text-gray-500">Nenhuma localidade encontrada</p>
    </div>
</div>

<!-- Paginação -->
<div id="paginationContainer" class="mt-6"></div>

<!-- Modal de Localidade -->
<div id="localidadeModal" class="modal">
    <div class="modal-content max-w-2xl">
        <div class="modal-header">
            <h3 class="modal-title" id="modalTitle">Nova Localidade</h3>
            <button class="modal-close" onclick="UI.closeModal('localidadeModal')">&times;</button>
        </div>
        
        <form id="localidadeForm" class="space-y-4">
            <input type="hidden" id="localidadeId" name="id">
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="form-label">Código da Localidade *</label>
                    <input type="text" name="codigo_localidade" class="form-input" required maxlength="20">
                </div>
                <div>
                    <label class="form-label">CNPJ *</label>
                    <input type="text" name="cnpj" id="cnpjInput" class="form-input" required maxlength="18">
                    <small class="text-gray-500">Formato: 00.000.000/0000-00</small>
                </div>
            </div>
            
            <div>
                <label class="form-label">Nome da Localidade *</label>
                <input type="text" name="nome_localidade" class="form-input" required maxlength="200">
            </div>
            
            <div>
                <label class="form-label">Endereço</label>
                <textarea name="endereco" class="form-input" rows="3"></textarea>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="form-label">Telefone</label>
                    <input type="tel" name="telefone" class="form-input" maxlength="20">
                </div>
                <div>
                    <label class="form-label">Email</label>
                    <input type="email" name="email" class="form-input">
                </div>
            </div>
            
            <div>
                <label class="form-label">Observações</label>
                <textarea name="observacoes" class="form-input" rows="3"></textarea>
            </div>
            
            <div class="flex items-center" id="statusContainer" style="display: none;">
                <input type="checkbox" name="ativo" id="ativoCheckbox" class="mr-2">
                <label for="ativoCheckbox" class="text-sm text-gray-700">Localidade ativa</label>
            </div>
            
            <div class="flex justify-end space-x-4 pt-4">
                <button type="button" onclick="UI.closeModal('localidadeModal')" class="btn-secondary">
                    Cancelar
                </button>
                <button type="submit" class="btn-primary">
                    <span id="submitBtnText">Salvar</span>
                    <i id="submitSpinner" class="fas fa-spinner fa-spin ml-2 hidden"></i>
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Modal de Visualização -->
<div id="viewLocalidadeModal" class="modal">
    <div class="modal-content max-w-lg">
        <div class="modal-header">
            <h3 class="modal-title">Detalhes da Localidade</h3>
            <button class="modal-close" onclick="UI.closeModal('viewLocalidadeModal')">&times;</button>
        </div>
        
        <div id="localidadeDetails" class="space-y-4">
            <!-- Conteúdo será preenchido via JavaScript -->
        </div>
        
        <div class="flex justify-end pt-4">
            <button onclick="UI.closeModal('viewLocalidadeModal')" class="btn-secondary">
                Fechar
            </button>
        </div>
    </div>
</div>

<script>
let currentPage = 1;
let currentFilters = {};

document.addEventListener('DOMContentLoaded', function() {
    loadLocalidades();
    setupEventListeners();
});

function setupEventListeners() {
    // Busca com debounce
    const searchInput = document.getElementById('searchInput');
    searchInput.addEventListener('input', Utils.debounce(function() {
        currentFilters.busca = this.value;
        currentPage = 1;
        loadLocalidades();
    }, 500));
    
    // Filtro de status
    document.getElementById('statusFilter').addEventListener('change', function() {
        currentFilters.ativo = this.value;
        currentPage = 1;
        loadLocalidades();
    });
    
    // Máscara de CNPJ
    const cnpjInput = document.getElementById('cnpjInput');
    cnpjInput.addEventListener('input', function() {
        this.value = formatCNPJInput(this.value);
    });
    
    // Form submission
    document.getElementById('localidadeForm').addEventListener('submit', handleLocalidadeSubmit);
}

function formatCNPJInput(value) {
    // Remove tudo que não é dígito
    value = value.replace(/\D/g, '');
    
    // Aplica a máscara
    if (value.length <= 14) {
        value = value.replace(/^(\d{2})(\d)/, '$1.$2');
        value = value.replace(/^(\d{2})\.(\d{3})(\d)/, '$1.$2.$3');
        value = value.replace(/\.(\d{3})(\d)/, '.$1/$2');
        value = value.replace(/(\d{4})(\d)/, '$1-$2');
    }
    
    return value;
}

async function loadLocalidades() {
    try {
        showTableLoading(true);
        
        const params = new URLSearchParams({
            pagina: currentPage,
            limite: 20,
            ...currentFilters
        });
        
        const { data } = await API.get(`/localidades?${params}`);
        
        if (data.success) {
            updateLocalidadeTable(data.data.localidades);
            updatePagination(data.data.paginacao);
        } else {
            UI.showAlert('Erro ao carregar localidades: ' + data.message, 'error');
        }
    } catch (error) {
        console.error('Erro ao carregar localidades:', error);
        UI.showAlert('Erro de conexão ao carregar localidades', 'error');
    } finally {
        showTableLoading(false);
    }
}

function updateLocalidadeTable(localidades) {
    const tbody = document.getElementById('localidadeTableBody');
    const emptyState = document.getElementById('emptyState');
    
    if (localidades.length === 0) {
        tbody.innerHTML = '';
        emptyState.classList.remove('hidden');
        return;
    }
    
    emptyState.classList.add('hidden');
    
    tbody.innerHTML = localidades.map(localidade => {
        const statusBadge = localidade.ativo 
            ? '<span class="badge badge-success">Ativo</span>'
            : '<span class="badge badge-danger">Inativo</span>';
            
        return `
            <tr class="hover:bg-gray-50">
                <td class="px-6 py-4">
                    <div class="font-medium text-gray-900">${localidade.codigo_localidade}</div>
                </td>
                <td class="px-6 py-4">
                    <div class="font-medium text-gray-900">${localidade.nome_localidade}</div>
                </td>
                <td class="px-6 py-4 text-sm text-gray-500">
                    ${localidade.cnpj}
                </td>
                <td class="px-6 py-4 text-sm text-gray-500">
                    ${localidade.telefone || '-'}
                </td>
                <td class="px-6 py-4 text-sm text-gray-500">
                    ${localidade.email || '-'}
                </td>
                <td class="px-6 py-4">
                    ${statusBadge}
                </td>
                <td class="px-6 py-4 text-sm font-medium space-x-2">
                    <button onclick="viewLocalidade('${localidade.id}')" class="text-blue-600 hover:text-blue-900" title="Visualizar">
                        <i class="fas fa-eye"></i>
                    </button>
                    <% if (user.tipo_usuario === 'administrador') { %>
                    <button onclick="editLocalidade('${localidade.id}')" class="text-yellow-600 hover:text-yellow-900" title="Editar">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button onclick="toggleLocalidadeStatus('${localidade.id}', '${localidade.nome_localidade}', ${localidade.ativo})" class="${localidade.ativo ? 'text-red-600 hover:text-red-900' : 'text-green-600 hover:text-green-900'}" title="${localidade.ativo ? 'Desativar' : 'Ativar'}">
                        <i class="fas fa-${localidade.ativo ? 'times' : 'check'}"></i>
                    </button>
                    <% } %>
                </td>
            </tr>
        `;
    }).join('');
}

function updatePagination(paginacao) {
    UI.updatePagination('paginationContainer', paginacao.pagina_atual, paginacao.total_paginas, 'changePage');
}

function changePage(page) {
    currentPage = page;
    loadLocalidades();
}

function clearFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('statusFilter').value = '';
    currentFilters = {};
    currentPage = 1;
    loadLocalidades();
}

function showTableLoading(show) {
    const loading = document.getElementById('tableLoading');
    const tbody = document.getElementById('localidadeTableBody');
    
    if (show) {
        loading.classList.remove('hidden');
        tbody.innerHTML = '';
    } else {
        loading.classList.add('hidden');
    }
}

function openLocalidadeModal(localidadeId = null) {
    const modal = document.getElementById('localidadeModal');
    const form = document.getElementById('localidadeForm');
    const title = document.getElementById('modalTitle');
    const statusContainer = document.getElementById('statusContainer');
    
    FormHelpers.clear(form);
    
    if (localidadeId) {
        title.textContent = 'Editar Localidade';
        statusContainer.style.display = 'flex';
        loadLocalidadeForEdit(localidadeId);
    } else {
        title.textContent = 'Nova Localidade';
        statusContainer.style.display = 'none';
        document.getElementById('localidadeId').value = '';
    }
    
    UI.showModal('localidadeModal');
}

async function loadLocalidadeForEdit(localidadeId) {
    try {
        UI.showLoading(true);
        
        const { data } = await API.get(`/localidades/${localidadeId}`);
        
        if (data.success) {
            const localidade = data.data.localidade;
            FormHelpers.populate('localidadeForm', localidade);
            document.getElementById('localidadeId').value = localidadeId;
            document.getElementById('ativoCheckbox').checked = localidade.ativo;
        } else {
            UI.showAlert('Erro ao carregar localidade: ' + data.message, 'error');
        }
    } catch (error) {
        console.error('Erro ao carregar localidade:', error);
        UI.showAlert('Erro de conexão ao carregar localidade', 'error');
    } finally {
        UI.showLoading(false);
    }
}

async function handleLocalidadeSubmit(e) {
    e.preventDefault();
    
    const submitBtn = e.target.querySelector('button[type="submit"]');
    const submitBtnText = document.getElementById('submitBtnText');
    const submitSpinner = document.getElementById('submitSpinner');
    
    try {
        submitBtn.disabled = true;
        submitBtnText.textContent = 'Salvando...';
        submitSpinner.classList.remove('hidden');
        
        const formData = FormHelpers.serialize(e.target);
        const localidadeId = document.getElementById('localidadeId').value;
        
        // Converter checkbox para boolean
        formData.ativo = document.getElementById('ativoCheckbox').checked;
        
        let response;
        if (localidadeId) {
            response = await API.put(`/localidades/${localidadeId}`, formData);
        } else {
            response = await API.post('/localidades', formData);
        }
        
        if (response.data.success) {
            UI.showAlert(localidadeId ? 'Localidade atualizada com sucesso!' : 'Localidade criada com sucesso!', 'success');
            UI.closeModal('localidadeModal');
            loadLocalidades();
        } else {
            UI.showAlert(response.data.message || 'Erro ao salvar localidade', 'error');
        }
    } catch (error) {
        console.error('Erro ao salvar localidade:', error);
        UI.showAlert('Erro de conexão ao salvar localidade', 'error');
    } finally {
        submitBtn.disabled = false;
        submitBtnText.textContent = 'Salvar';
        submitSpinner.classList.add('hidden');
    }
}

async function viewLocalidade(localidadeId) {
    try {
        UI.showLoading(true);
        
        const { data } = await API.get(`/localidades/${localidadeId}`);
        
        if (data.success) {
            const localidade = data.data.localidade;
            showLocalidadeDetails(localidade);
        } else {
            UI.showAlert('Erro ao carregar localidade: ' + data.message, 'error');
        }
    } catch (error) {
        console.error('Erro ao carregar localidade:', error);
        UI.showAlert('Erro de conexão ao carregar localidade', 'error');
    } finally {
        UI.showLoading(false);
    }
}

function showLocalidadeDetails(localidade) {
    const container = document.getElementById('localidadeDetails');
    
    container.innerHTML = `
        <div class="space-y-3">
            <div>
                <label class="text-sm font-medium text-gray-500">Código</label>
                <p class="text-gray-900">${localidade.codigo_localidade}</p>
            </div>
            <div>
                <label class="text-sm font-medium text-gray-500">Nome</label>
                <p class="text-gray-900">${localidade.nome_localidade}</p>
            </div>
            <div>
                <label class="text-sm font-medium text-gray-500">CNPJ</label>
                <p class="text-gray-900">${localidade.cnpj}</p>
            </div>
            ${localidade.endereco ? `
            <div>
                <label class="text-sm font-medium text-gray-500">Endereço</label>
                <p class="text-gray-900">${localidade.endereco}</p>
            </div>
            ` : ''}
            ${localidade.telefone ? `
            <div>
                <label class="text-sm font-medium text-gray-500">Telefone</label>
                <p class="text-gray-900">${localidade.telefone}</p>
            </div>
            ` : ''}
            ${localidade.email ? `
            <div>
                <label class="text-sm font-medium text-gray-500">Email</label>
                <p class="text-gray-900">${localidade.email}</p>
            </div>
            ` : ''}
            <div>
                <label class="text-sm font-medium text-gray-500">Status</label>
                <p class="text-gray-900">
                    <span class="badge ${localidade.ativo ? 'badge-success' : 'badge-danger'}">
                        ${localidade.ativo ? 'Ativo' : 'Inativo'}
                    </span>
                </p>
            </div>
            ${localidade.observacoes ? `
            <div>
                <label class="text-sm font-medium text-gray-500">Observações</label>
                <p class="text-gray-900">${localidade.observacoes}</p>
            </div>
            ` : ''}
            <div>
                <label class="text-sm font-medium text-gray-500">Criado em</label>
                <p class="text-gray-900">${Utils.formatDate(localidade.criado_em)}</p>
            </div>
        </div>
    `;
    
    UI.showModal('viewLocalidadeModal');
}

function editLocalidade(localidadeId) {
    openLocalidadeModal(localidadeId);
}

function toggleLocalidadeStatus(localidadeId, nome, isActive) {
    const action = isActive ? 'desativar' : 'ativar';
    const message = `Tem certeza que deseja ${action} a localidade "${nome}"?`;
    
    UI.confirm(message, async () => {
        try {
            UI.showLoading(true);
            
            const { data } = await API.put(`/localidades/${localidadeId}`, {
                ativo: !isActive
            });
            
            if (data.success) {
                UI.showAlert(`Localidade ${isActive ? 'desativada' : 'ativada'} com sucesso!`, 'success');
                loadLocalidades();
            } else {
                UI.showAlert('Erro ao alterar status: ' + data.message, 'error');
            }
        } catch (error) {
            console.error('Erro ao alterar status:', error);
            UI.showAlert('Erro de conexão ao alterar status', 'error');
        } finally {
            UI.showLoading(false);
        }
    });
}
</script>

